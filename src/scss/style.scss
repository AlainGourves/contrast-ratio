@import 'mixins';
@import 'switch';

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --bg-clr: #fff;
  --samp-bg: hsl(180deg, 50%, 50%);
  --samp-clr: #eeff00;
}

html {
  font-size: 16px;
}

body {
  @include grid-center;
  min-height: 100vh;
  background-color: var(--bg-clr);
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

#canvas {
  background-image:
    repeating-linear-gradient(0deg, #ffffff40 0px, #ffffff40 1px, transparent 1px, transparent 10%),
    repeating-linear-gradient(90deg, #ffffff40 0px, #ffffff40 1px, transparent 1px, transparent 10%),
    linear-gradient(rgb(128, 128, 128), rgb(128, 128, 128));
  background-repeat: no-repeat;
  background-position: var(--cnv-ml, 60px) var(--cnv-mt, 30px);
  background-size: var(--cnv-w, 260px) var(--cnv-w, 260px);
  width: var(--cnv-w-tot, 340px);
  height: var(--cnv-h-tot, 326px);
}

@media screen and (min-width: 600px) {
  body {
    grid-template-areas:
      "sample sample"
      "main inputs";

    & #canvas {
      grid-area: main;
    }

    & #sample {
      grid-area: sample;
    }

    & #inputs {
      grid-area: inputs;
      grid-template-columns: 1fr;
      grid-template-rows: repeat(3, 1fr);
    }

    & #score {
      order: -1;
    }
  }

}

#score {
  display: grid;
  grid-template-columns: max-content 1fr;
  place-content: center;

  & p {
    position: relative;
    padding: .5em;

    &::after {
      padding-left: .25em;
    }
  }
}

#sample {
  position: relative;
  height: 5rem;
  background-color: var(--samp-bg);
  color: var(--samp-clr);
  text-align: center;
  line-height: 1.5;
  padding: 1rem;
  padding-bottom: 2rem;
  margin-bottom: 1rem;
  border-radius: .25rem;
  transition: background-color .25s linear,
  color .25s linear;
  
  & span{
    
    &.large {
      font-size: 18pt;
      font-weight: bold;
    }

    &.normal{
      font-size: 14pt;
      font-weight: normal;
    }
  }

  & .size-matter{
    display: flex;
    align-items: center;
    position: absolute;
    right: 0;
    bottom: 0;
    font-size: .75rem;
    color: #000;
    padding: .25rem;
    background: #d3d3d3;
    border-bottom-right-radius: .25rem;
    border-top-left-radius: .25rem;
  }
}

#inputs {
  display: grid;
  grid-template-columns: repeat(2, 6rem) 1fr;

  & div {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    gap: .25rem;
    position: relative;
  }

  & label {
    font-size: .8rem;
  }

  & svg {
    user-select: none;
    width: 100%;
    height: 100%;
  }
}

#score {
  & span:nth-of-type(2) {
    font-size: 1.5rem;
    
    &::after {
      margin-right: .25rem;
    }
    
    &.cr_ok {
      & span{
        font-weight: bolder;
        color: green;
      }
      
      &::after {
        content: '👍';
      }
    }
  
    &.cr_bad {
      & span {
        font-weight: bold;
        color: red;
      }
  
      &::after {
        content: '👎';
      }
    }
  }
  
  & > span:last-of-type {
    font-size: .75rem;
  }
  
}

input[type="color"] {
  box-sizing: border-box;
  width: 3rem;
  height: 3rem;
  padding: 0;
  margin-top: .5rem;
  border-radius: 50%;
  border-width: 2px;
  border-style: solid;
  cursor: pointer;

  &::-webkit-color-swatch-wrapper {
    padding: 0;
  }

  &::-webkit-color-swatch {
    border: none;
    border-radius: 50%;
  }

  &::-moz-color-swatch {
    border: none;
    border-radius: 50%;
  }
}

.btn-clipboard {
  align-self: flex-end;
  position: absolute;
  top: 0;
  right: 0;
  padding: 0;
  border: none;
  appearance: none;
  width: 1.5rem;
  height: 1.5rem;
  // color: deepskyblue;
  background-color: transparent;
  user-select: none;
  cursor: pointer;
  transition: transform 0.25s linear;

  &:hover,
  &:focus,
  &:active {
    transform: scale(1.2);
  }
}

// Notifications
.notif {
  $h: 4em;
  width: clamp(50vw, 36ch, calc(100% - 4rem));
  min-height: $h;
  position: fixed;
  @include grid-center;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) translateY($h);
  transition-property: transform, opacity;
  transition-duration: .125s;
  transition-delay: 2s;
  transition-timing-function: cubic-bezier(0.37, 0.21, 0.72, 1.35);
  background-color: rgba(0, 0, 0, .75);
  color: #fff;
  border-top-left-radius: .25em;
  border-top-right-radius: .25em;
  padding: 0 2.5em;
  opacity: 0;

  &.visible {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
    transition-duration: .25s;
    transition-delay: 0s;
  }
}